@model EMarket.ViewModels.ProductCategoryVM

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit Product</h2>
<head>
    <style>
        .btn {
            border-radius: 12px;
        }
    </style>
</head>
@using (Html.BeginForm("AddNew", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{


    <div class="form-horizontal">
        
        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.Product.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Product.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Product.price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product.price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="ImgFile" class="form-control"/>
                @Html.ValidationMessageFor(model => model.Product.image, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Product.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.category_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Product.category_id, new SelectList(Model.Category, "id", "name"), "Select Category..", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Product.category_id, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(c => c.Product.id)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update Product" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "ListOfProducts", "Products")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}